{"uid":"12057a6c2d88be05","name":"HEIM143 - POST: /propostas/id_produto_inexistente(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/id_produto_inexistente(-)","historyId":"aeaea4d6-330d-4e6a-b3c5-316319c00075","time":{"start":1702928223240,"stop":1702928223787,"duration":547},"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar resposta de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar resposta de erro","steps":[{"name":"Status code is 400","time":{"start":1702928223783,"stop":1702928223783,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"AssertionError: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1702928223784,"stop":1702928223784,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'","statusTrace":"AssertionError: expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:9:24)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"Validar resposta de erro","time":{"start":1702928223785,"stop":1702928223785,"duration":0},"status":"failed","statusMessage":"expected undefined to equal 'Programa não encontrado'","statusTrace":"AssertionError: expected undefined to equal 'Programa não encontrado'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:18:49)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:14:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"2f6e3e4c23d80e34","name":"TestScript","source":"2f6e3e4c23d80e34.txt","type":"text/plain","size":662},{"uid":"f58ebb4fa0f0ec86","name":"Request Headers","source":"f58ebb4fa0f0ec86.json","type":"application/json","size":359},{"uid":"3f2c20dfaba131df","name":"Request Body","source":"3f2c20dfaba131df.txt","type":"text/plain","size":2432},{"uid":"c76d94a2940730f0","name":"Response Headers","source":"c76d94a2940730f0.json","type":"application/json","size":1050},{"uid":"418525dd41f39723","name":"Response Body","source":"418525dd41f39723.txt","type":"text/plain","size":64}],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":3,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"12057a6c2d88be05.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}