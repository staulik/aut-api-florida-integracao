{"uid":"12a7ea40f6e870e5","name":"HEIM143 - POST: /propostas/ddd_>_99(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/ddd_>_99(-)","historyId":"e27cbd21-1319-4e6c-aa09-7e4c862ffca9","time":{"start":1705952139672,"stop":1705952140258,"duration":586},"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar mensagens de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar mensagens de erro","steps":[{"name":"Status code is 400","time":{"start":1705952140251,"stop":1705952140251,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"Error: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1705952140253,"stop":1705952140253,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'","statusTrace":"Error: expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:24)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"Validar mensagens de erro","time":{"start":1705952140254,"stop":1705952140254,"duration":0},"status":"failed","statusMessage":"expected undefined to exist","statusTrace":"Error: expected undefined to exist\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:19:38)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:14:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[{"uid":"f845071f810c938","name":"PreRequest","source":"f845071f810c938.txt","type":"text/plain","size":1211},{"uid":"e277cefc6b3a4890","name":"TestScript","source":"e277cefc6b3a4890.txt","type":"text/plain","size":1167},{"uid":"dceb081b362f5aa","name":"ConsoleLogs","source":"dceb081b362f5aa.txt","type":"text/plain","size":45},{"uid":"7ce4bb37773cd639","name":"Request Headers","source":"7ce4bb37773cd639.json","type":"application/json","size":359},{"uid":"26ba1ef355f1584","name":"Request Body","source":"26ba1ef355f1584.txt","type":"text/plain","size":2368},{"uid":"250701288a19bca","name":"Response Headers","source":"250701288a19bca.json","type":"application/json","size":1047},{"uid":"ea7188135dbef3d4","name":"Response Body","source":"ea7188135dbef3d4.txt","type":"text/plain","size":64}],"parameters":[],"attachmentsCount":7,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":3,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"12a7ea40f6e870e5.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}