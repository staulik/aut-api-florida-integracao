{"uid":"b63b0491b96de347","name":"HEIM143 - POST: /propostas/cpf_tam_sup_limite(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/cpf_tam_sup_limite(-)","historyId":"41cce247-1009-41d3-b571-43f79e543dc6","time":{"start":1703014519144,"stop":1703014519740,"duration":596},"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Status code is 400, Validar mensagem de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Status code is 400, Validar mensagem de erro","steps":[{"name":"Status code is 400","time":{"start":1703014519732,"stop":1703014519732,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"AssertionError: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1703014519732,"stop":1703014519732,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'","statusTrace":"AssertionError: expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:9:23)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"Status code is 400","time":{"start":1703014519733,"stop":1703014519733,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"AssertionError: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:15:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:14:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1703014519734,"stop":1703014519734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"Validar mensagem de erro","time":{"start":1703014519735,"stop":1703014519735,"duration":0},"status":"failed","statusMessage":"expected undefined to exist","statusTrace":"AssertionError: expected undefined to exist\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:29:38)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:24:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"24fee1774bfb94cd","name":"PreRequest","source":"24fee1774bfb94cd.txt","type":"text/plain","size":2},{"uid":"7e3653a73b37ae7c","name":"TestScript","source":"7e3653a73b37ae7c.txt","type":"text/plain","size":1305},{"uid":"73c860f3b41a2bc3","name":"Request Headers","source":"73c860f3b41a2bc3.json","type":"application/json","size":359},{"uid":"d32105b45c07388e","name":"Request Body","source":"d32105b45c07388e.txt","type":"text/plain","size":2372},{"uid":"97a52d3ea60689d0","name":"Response Headers","source":"97a52d3ea60689d0.json","type":"application/json","size":1049},{"uid":"2970ebd41bdad47d","name":"Response Body","source":"2970ebd41bdad47d.txt","type":"text/plain","size":64}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":6,"hasContent":true,"attachmentStep":false,"stepsCount":5},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b63b0491b96de347.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}