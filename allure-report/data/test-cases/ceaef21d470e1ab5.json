{"uid":"ceaef21d470e1ab5","name":"HEIM143 - POST: /propostas/cpf_tam_sup_limite(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/cpf_tam_sup_limite(-)","historyId":"aa90cbaf-0842-4150-b437-5746d83f48bb","time":{"start":1704915297514,"stop":1704915298104,"duration":590},"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Status code is 400, Validar mensagem de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Status code is 400, Validar mensagem de erro","steps":[{"name":"Status code is 400","time":{"start":1704915298096,"stop":1704915298096,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"Error: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1704915298097,"stop":1704915298097,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'","statusTrace":"Error: expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:23)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true},{"name":"Status code is 400","time":{"start":1704915298098,"stop":1704915298098,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"Error: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:15:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:14:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1704915298098,"stop":1704915298098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Validar mensagem de erro","time":{"start":1704915298099,"stop":1704915298099,"duration":0},"status":"failed","statusMessage":"expected undefined to exist","statusTrace":"Error: expected undefined to exist\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:29:38)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:24:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[{"uid":"1d7e0f155ae9fa12","name":"PreRequest","source":"1d7e0f155ae9fa12.txt","type":"text/plain","size":2},{"uid":"b7b1897655dc6ed4","name":"TestScript","source":"b7b1897655dc6ed4.txt","type":"text/plain","size":1305},{"uid":"f37889473cc5cf14","name":"Request Headers","source":"f37889473cc5cf14.json","type":"application/json","size":359},{"uid":"c6cffd1b334b78d1","name":"Request Body","source":"c6cffd1b334b78d1.txt","type":"text/plain","size":2372},{"uid":"e36d64b00456e54b","name":"Response Headers","source":"e36d64b00456e54b.json","type":"application/json","size":1047},{"uid":"7e4a1cb3f05c43d2","name":"Response Body","source":"7e4a1cb3f05c43d2.txt","type":"text/plain","size":64}],"parameters":[],"stepsCount":5,"hasContent":true,"attachmentStep":false,"attachmentsCount":6,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ceaef21d470e1ab5.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}