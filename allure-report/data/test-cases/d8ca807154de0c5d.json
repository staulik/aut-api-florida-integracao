{"uid":"d8ca807154de0c5d","name":"HEIM143 - POST: /propostas/id_produto_inexistente(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/id_produto_inexistente(-)","historyId":"f0aef374-9165-4e8f-b5e5-54825595fda9","time":{"start":1703792110883,"stop":1703792111484,"duration":601},"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar resposta de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar resposta de erro","steps":[{"name":"Status code is 400","time":{"start":1703792111480,"stop":1703792111480,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"Error: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1703792111481,"stop":1703792111481,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'","statusTrace":"Error: expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:24)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"Validar resposta de erro","time":{"start":1703792111481,"stop":1703792111481,"duration":0},"status":"failed","statusMessage":"expected undefined to equal 'Programa não encontrado'","statusTrace":"Error: expected undefined to equal 'Programa não encontrado'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:18:49)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:14:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[{"uid":"117f1ba37922b5f0","name":"TestScript","source":"117f1ba37922b5f0.txt","type":"text/plain","size":662},{"uid":"27870f9958f316c5","name":"Request Headers","source":"27870f9958f316c5.json","type":"application/json","size":359},{"uid":"d02400841a36e984","name":"Request Body","source":"d02400841a36e984.txt","type":"text/plain","size":2432},{"uid":"df5dba3e76ce8feb","name":"Response Headers","source":"df5dba3e76ce8feb.json","type":"application/json","size":1049},{"uid":"a2c6aa8ae3943c96","name":"Response Body","source":"a2c6aa8ae3943c96.txt","type":"text/plain","size":64}],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":true,"stepsCount":3,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d8ca807154de0c5d.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}