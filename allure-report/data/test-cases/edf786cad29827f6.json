{"uid":"edf786cad29827f6","name":"HEIM143 - POST: /propostas/idOrigemComercial_zero(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/idOrigemComercial_zero(-)","historyId":"efd2dd4d-2802-4cb5-9675-a09dbcccce68","time":{"start":1704483410989,"stop":1704483411614,"duration":625},"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar resposta de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar resposta de erro","steps":[{"name":"Status code is 400","time":{"start":1704483411611,"stop":1704483411611,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"Error: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1704483411612,"stop":1704483411612,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'","statusTrace":"Error: expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:24)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"Validar resposta de erro","time":{"start":1704483411612,"stop":1704483411612,"duration":0},"status":"failed","statusMessage":"expected undefined to equal 'Não foi possível recuperar o programa'","statusTrace":"Error: expected undefined to equal 'Não foi possível recuperar o programa'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:20:49)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:15:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[{"uid":"907faa51716e5d58","name":"TestScript","source":"907faa51716e5d58.txt","type":"text/plain","size":733},{"uid":"378cab2d7c1c7416","name":"Request Headers","source":"378cab2d7c1c7416.json","type":"application/json","size":359},{"uid":"3be07c80542d2b97","name":"Request Body","source":"3be07c80542d2b97.txt","type":"text/plain","size":2430},{"uid":"d421cd25a11c45c2","name":"Response Headers","source":"d421cd25a11c45c2.json","type":"application/json","size":1049},{"uid":"3a38e9aaf213cc0b","name":"Response Body","source":"3a38e9aaf213cc0b.txt","type":"text/plain","size":64}],"parameters":[],"attachmentStep":false,"stepsCount":3,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":5},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"edf786cad29827f6.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}