{"uid":"c2aa256367551485","name":"HEIM143 - POST: /propostas/ddd_>_99(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/ddd_>_99(-)","historyId":"ab0ad53e-a046-4c79-8892-42d28dff3505","time":{"start":1702582515912,"stop":1702582516562,"duration":650},"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar mensagens de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar mensagens de erro","steps":[{"name":"Status code is 400","time":{"start":1702582516558,"stop":1702582516558,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"AssertionError: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1702582516559,"stop":1702582516559,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'","statusTrace":"AssertionError: expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:9:24)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"Validar mensagens de erro","time":{"start":1702582516559,"stop":1702582516559,"duration":0},"status":"failed","statusMessage":"expected undefined to exist","statusTrace":"AssertionError: expected undefined to exist\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:19:38)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:14:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[{"uid":"9ad3137e53615fa8","name":"PreRequest","source":"9ad3137e53615fa8.txt","type":"text/plain","size":1211},{"uid":"e7e6a81b1f3dcec8","name":"TestScript","source":"e7e6a81b1f3dcec8.txt","type":"text/plain","size":1167},{"uid":"c6b2931dff31c321","name":"ConsoleLogs","source":"c6b2931dff31c321.txt","type":"text/plain","size":45},{"uid":"3d632d86eb41477d","name":"Request Headers","source":"3d632d86eb41477d.json","type":"application/json","size":359},{"uid":"390bec500bd1bea","name":"Request Body","source":"390bec500bd1bea.txt","type":"text/plain","size":2368},{"uid":"2fabfe81f455bd59","name":"Response Headers","source":"2fabfe81f455bd59.json","type":"application/json","size":1050},{"uid":"78cdf657e1103bf9","name":"Response Body","source":"78cdf657e1103bf9.txt","type":"text/plain","size":64}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":3,"shouldDisplayMessage":true,"attachmentsCount":7},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c2aa256367551485.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}