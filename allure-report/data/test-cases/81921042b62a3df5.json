{"uid":"81921042b62a3df5","name":"HEIM143 - POST: /propostas/cpf_incompleto(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/cpf_incompleto(-)","historyId":"7beb24c7-c8dd-40c9-b6c4-1062635d439d","time":{"start":1705606675619,"stop":1705606676323,"duration":704},"status":"failed","statusMessage":"Status code is 400, Status code is 400, Validar mensagem de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code is 400, Validar mensagem de erro","steps":[{"name":"Status code is 400","time":{"start":1705606676316,"stop":1705606676316,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"Error: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1705606676316,"stop":1705606676316,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Status code is 400","time":{"start":1705606676317,"stop":1705606676317,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"Error: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:14:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:13:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1705606676318,"stop":1705606676318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Validar mensagem de erro","time":{"start":1705606676319,"stop":1705606676319,"duration":0},"status":"failed","statusMessage":"expected undefined to exist","statusTrace":"Error: expected undefined to exist\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:28:38)\n    at Postman.e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:23:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[{"uid":"5c62d445522e180f","name":"TestScript","source":"5c62d445522e180f.txt","type":"text/plain","size":1273},{"uid":"e354661c5007bcf2","name":"Request Headers","source":"e354661c5007bcf2.json","type":"application/json","size":359},{"uid":"51b26e2ee622cc1d","name":"Request Body","source":"51b26e2ee622cc1d.txt","type":"text/plain","size":2361},{"uid":"dc082671ecf0bec6","name":"Response Headers","source":"dc082671ecf0bec6.json","type":"application/json","size":1049},{"uid":"c9f7da2a9bf83c12","name":"Response Body","source":"c9f7da2a9bf83c12.txt","type":"text/plain","size":64}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":5,"stepsCount":5,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"81921042b62a3df5.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}