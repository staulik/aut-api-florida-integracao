{"uid":"a0679745926bb317","name":"HEIM143 - POST: /propostas/cpf_incompleto(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/cpf_incompleto(-)","historyId":"20a5ddfd-ef40-4ab4-9b73-2a4e2947bd49","time":{"start":1703273743413,"stop":1703273743987,"duration":574},"status":"failed","statusMessage":"Status code is 400, Status code is 400, Validar mensagem de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code is 400, Validar mensagem de erro","steps":[{"name":"Status code is 400","time":{"start":1703273743980,"stop":1703273743980,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"AssertionError: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1703273743981,"stop":1703273743981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"Status code is 400","time":{"start":1703273743981,"stop":1703273743982,"duration":1},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"AssertionError: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:14:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:13:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1703273743982,"stop":1703273743982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"Validar mensagem de erro","time":{"start":1703273743983,"stop":1703273743983,"duration":0},"status":"failed","statusMessage":"expected undefined to exist","statusTrace":"AssertionError: expected undefined to exist\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:28:38)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:23:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0}],"attachments":[{"uid":"758927ac4becdde1","name":"TestScript","source":"758927ac4becdde1.txt","type":"text/plain","size":1273},{"uid":"96dc2d42b4fa0f1d","name":"Request Headers","source":"96dc2d42b4fa0f1d.json","type":"application/json","size":359},{"uid":"9dc2606559431461","name":"Request Body","source":"9dc2606559431461.txt","type":"text/plain","size":2361},{"uid":"ee4ffaf80ac89cce","name":"Response Headers","source":"ee4ffaf80ac89cce.json","type":"application/json","size":1047},{"uid":"3874e9bc8968fe01","name":"Response Body","source":"3874e9bc8968fe01.txt","type":"text/plain","size":64}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":5,"attachmentStep":false,"hasContent":true,"stepsCount":5},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a0679745926bb317.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}