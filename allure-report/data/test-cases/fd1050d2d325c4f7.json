{"uid":"fd1050d2d325c4f7","name":"HEIM143 - POST: /propostas/incluir_proposta(+)","fullName":"Camada de Integração - CI/Cadastro/Adicional#HEIM143 - POST: /propostas/incluir_proposta(+)","historyId":"fd690e2d-596d-4b25-82cf-4fdfe7cb9d93","time":{"start":1703187519409,"stop":1703187520310,"duration":901},"status":"failed","statusMessage":"Status code is 200, A resposta é valida e deve ter um corpo, Validar a estrutura do corpo, Validar se CPF gerado = response, Validar mensagem do campo descricaoRetorno","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, A resposta é valida e deve ter um corpo, Validar a estrutura do corpo, Validar se CPF gerado = response, Validar mensagem do campo descricaoRetorno","steps":[{"name":"Status code is 200","time":{"start":1703187520296,"stop":1703187520296,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 500","statusTrace":"AssertionError: expected response to have status code 200 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:24:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:23:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1703187520297,"stop":1703187520297,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'INTERNAL SERVER ERROR'","statusTrace":"AssertionError: expected response to have status reason 'OK' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:33:24)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:32:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"Validar a estrutura do corpo","time":{"start":1703187520305,"stop":1703187520305,"duration":0},"status":"failed","statusMessage":"expected data to satisfy schema but found following errors: \ndata should have required property 'codRetorno', data should have required property 'descricaoRetorno', data should have required property 'solicitacao', data should have required property 'canal'","statusTrace":"AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'codRetorno', data should have required property 'descricaoRetorno', data should have required property 'solicitacao', data should have required property 'canal'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:268:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:267:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"Validar se CPF gerado = response","time":{"start":1703187520306,"stop":1703187520306,"duration":0},"status":"failed","statusMessage":"Cannot read properties of undefined (reading 'cpf')","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0},{"name":"Validar mensagem do campo descricaoRetorno","time":{"start":1703187520306,"stop":1703187520306,"duration":0},"status":"failed","statusMessage":"expected undefined to equal 'Solicitação cadastrada com sucesso'","statusTrace":"AssertionError: expected undefined to equal 'Solicitação cadastrada com sucesso'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:281:36)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:279:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[{"uid":"e8eae4b856365739","name":"PreRequest","source":"e8eae4b856365739.txt","type":"text/plain","size":1319},{"uid":"6ecd683463ba929e","name":"TestScript","source":"6ecd683463ba929e.txt","type":"text/plain","size":9593},{"uid":"7b71cecfa472a11","name":"ConsoleLogs","source":"7b71cecfa472a11.txt","type":"text/plain","size":114},{"uid":"e594b44759c8ebf6","name":"Request Headers","source":"e594b44759c8ebf6.json","type":"application/json","size":359},{"uid":"e004586fd36c75f2","name":"Request Body","source":"e004586fd36c75f2.txt","type":"text/plain","size":2364},{"uid":"fde5e77b5f36fc39","name":"Response Headers","source":"fde5e77b5f36fc39.json","type":"application/json","size":1048},{"uid":"81c8c6a2f25684f5","name":"Response Body","source":"81c8c6a2f25684f5.txt","type":"text/plain","size":64}],"parameters":[],"stepsCount":5,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":7},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Adicional"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"fd1050d2d325c4f7.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}