{"uid":"f41235f938c55aef","name":"HEIM143 - POST: /propostas/email_invalido(-)","fullName":"Camada de Integração - CI/Cadastro/Propostas#HEIM143 - POST: /propostas/email_invalido(-)","historyId":"159ed9fa-6023-4656-ba6d-4f05a5a19da8","time":{"start":1703273746843,"stop":1703273747416,"duration":573},"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar mensagem de erro","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, A resposta é valida e deve ter um corpo, Validar mensagem de erro","steps":[{"name":"Status code is 400","time":{"start":1703273747410,"stop":1703273747410,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 500","statusTrace":"AssertionError: expected response to have status code 400 but got 500\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:5:25)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"A resposta é valida e deve ter um corpo","time":{"start":1703273747411,"stop":1703273747411,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'","statusTrace":"AssertionError: expected response to have status reason 'BAD REQUEST' but got 'INTERNAL SERVER ERROR'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:9:23)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0},{"name":"Validar mensagem de erro","time":{"start":1703273747412,"stop":1703273747412,"duration":0},"status":"failed","statusMessage":"expected undefined to equal 'Não foi possível recuperar o programa'","statusTrace":"AssertionError: expected undefined to equal 'Não foi possível recuperar o programa'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:16:45)\n    at Postman.e.test (evalmachine.<anonymous>:66:10108)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1815891), <anonymous>:14:4)\n    at u.exec (evalmachine.<anonymous>:66:1815926)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8112)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"hasContent":true,"stepsCount":0}],"attachments":[{"uid":"6da62e60ae2388dd","name":"TestScript","source":"6da62e60ae2388dd.txt","type":"text/plain","size":452},{"uid":"5296e1bc92c15931","name":"Request Headers","source":"5296e1bc92c15931.json","type":"application/json","size":359},{"uid":"da5612f4df51d99c","name":"Request Body","source":"da5612f4df51d99c.txt","type":"text/plain","size":2369},{"uid":"249a136bfa57a95a","name":"Response Headers","source":"249a136bfa57a95a.json","type":"application/json","size":1050},{"uid":"ae5c5069a7af1c11","name":"Response Body","source":"ae5c5069a7af1c11.txt","type":"text/plain","size":64}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":5,"attachmentStep":false,"hasContent":true,"stepsCount":3},"afterStages":[],"labels":[{"name":"parentSuite","value":"Camada de Integração - CI"},{"name":"suite","value":"Cadastro"},{"name":"subSuite","value":"Propostas"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas"},{"name":"Response Code","value":"500"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f41235f938c55aef.json","parameterValues":["POST - https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/propostas/api/propostas","500"]}